{"version":3,"sources":["logo.svg","activities/vaporTriangulation.js","activities/aboutMe.js","activities/JupViewer.js","activities/blogDrawer.js","landingPage.js","activities/blogList.js","activities/blogViewer.js","main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sleep","ms","Promise","resolve","setTimeout","Triangulation","state","dims","window","screen","width","col_pegs","col_pregs_dest","interm_pegs","screenWidth","availWidth","screenHeight","availHeight","easter_count","min","max","Math","ceil","floor","random","a","steps","this","generateGrid","new_col_pegs","setState","obj","p","intermediate_pegs","spl","intermediate_col","delta","push","renderTraingles","j","col_height","temp_col","prev","i","rand_split","getRandomInt","c","document","getElementById","ctx","getContext","clearRect","height","strokeStyle","fillStyle","beginPath","colStart","colOffset","lower_coord","moveTo","lineTo","stroke","icon","type","onClick","placeholder","mode","theme","name","style","maxWidth","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","readOnly","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","id","transformTriangle","current_easter_count","message","destroy","success","info","position","marginTop","textAlign","backgroundColor","React","Component","AboutMe","Card","Meta","class","Title","color","paddingTop","Paragraph","href","target","src","ReactMarkdown","require","JupViewer","fpath","fbase_path","ed_theme","text_ed_theme","background_theme","background_text_theme","background_input_theme","background_output_theme","loading","notebook_json","placeholder_component","gutterVisible","str","RegExp","test","props","file","fbase","split","pop","join","fetch","then","r","text","JSON","parse","error","alert","source","cell_content","code","rgx","new_source","old_source","match","validURL","replace","rgx2","s2","outputs","length","text_plain","stdout","errors","img_data","stdout_found","text_found","error_found","img_found","lines_stdout","lines_text_plain","lines_error_trace","outs","padding","display","margin","maxLines","ev","spinning","marginBottom","url","URL","location","searchParams","set","delete","history","pushState","reload","bodyStyle","border","span","strong","wordWrap","title","level","subtitle","alt","coverImg","float","defaultChecked","checkedChildren","unCheckedChildren","onChange","themeChanger","bind","gutterChanger","map","item","Text","borderStyle","borderWidth","onLoad","praseSource","parseMD","escapeHtml","praseOutputs","blogConfig","BlogDrawer","visible","placement","bmodal_visible","bmodal_title","bmodal_cover","bmodal_subtitle","bmodal_subtext","bmodal_nb_url","nb_view","showDrawer","onClose","e","onCloseBlog","origin","n","v","nv","queryStart","indexOf","queryEnd","query","slice","pairs","parms","decodeURIComponent","hasOwnProperty","newProps","parsedParams","parseURLParams","blog_content","warning","marginLeft","closable","Object","keys","open","hoverable","cover","description","tag","Landing","className","BlogList","itemLayout","size","Item","paddingLeft","paddingRight","ghost","shape","BlogViewer","console","log","Header","Layout","Content","Footer","MainPage","evaluateParams","contentLayoutStyle","contentStyle","footerStyle","activeSection","githubBarStyle","aboutMeStyle","blogBarStyle","isActiveAboutMe","isActiveBlog","qparams","search","params","dislayComponent","alignContent","App","basename","exact","path","component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d7c42e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport {\n    Tabs, Icon, Carousel, Card, Row, Col, Collapse,\n    Button, Modal, TreeSelect, Divider, Tooltip, message\n} from 'antd';\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst source_code_str = `\n/*################################################################## \n* HEY! YOU HAVE UNLOCKED THE EASTER EGG!  \n* THIS IS THE SOURCE CODE FOR THE \n* BACKGROUND ANIMATION THAT I WROTE.\n* FEEL FREE TO USE IT!\n*###################################################################\n*/\nimport React from 'react';\nimport {\n    Tabs, Icon, Carousel, Card, Row, Col, Collapse,\n    Button, Modal, TreeSelect, Divider, Tooltip\n} from 'antd';\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default class Triangulation extends React.Component {\n    state = {\n        dims: window.screen.width > 600 ? [20, 7] : [10, 10],\n        col_pegs: [],\n        col_pregs_dest: [],\n        interm_pegs: [],\n        screenWidth: window.screen.availWidth,\n        screenHeight: window.screen.availHeight > window.screen.availWidth ? window.screen.availHeight / 2 : window.screen.availHeight\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n    }\n\n    async transformTriangle() {\n        const steps = [0.02, 0.06, 0.14, 0.30, 0.70, 0.86, 0.94, 0.98, 1.0]\n        const col_pegs = this.state.col_pegs\n        const new_col_pegs = await this.generateGrid()\n\n        this.setState({\n            col_pregs_dest: new_col_pegs\n        });\n        for (var p in steps) {\n            var intermediate_pegs = [];\n            for (var obj in col_pegs) {\n                var intermediate_col = [];\n                for (var spl in col_pegs[obj]) {\n                    var delta = new_col_pegs[obj][spl] - col_pegs[obj][spl]\n                    intermediate_col.push(col_pegs[obj][spl] + (delta * steps[p]))\n                }\n                intermediate_pegs.push(intermediate_col)\n            }\n            this.setState({\n                col_pegs: intermediate_pegs\n            })\n            await this.renderTraingles()\n            await sleep(1)\n        }\n        this.setState({\n            col_pegs: new_col_pegs\n        })\n    }\n\n    async generateGrid() {\n        const splits = [30, 50, 40, 15, 20]\n        var col_pegs = [];\n        for (var j = 0; j <= this.state.dims[0]; j++) {\n            var col_height = this.state.screenHeight;\n            var temp_col = []\n            var prev = 0\n            for (var i = 0; i < this.state.dims[1]; i++) {\n                var rand_split = this.getRandomInt(5, 21);\n                temp_col.push(prev + col_height * (rand_split / 100))\n                prev += col_height * (rand_split / 100)\n                col_height = col_height * (1 - (rand_split / 100))\n            }\n            col_pegs.push(temp_col)\n        }\n        return col_pegs\n    }\n\n    async renderTraingles() {\n        var col_pegs = this.state.col_pegs;\n        var c = document.getElementById('triangulationCanvas');\n        var ctx = c.getContext('2d');\n        ctx.clearRect(0, 0, c.width, c.height);\n        ctx.strokeStyle = '#559e89';\n        ctx.fillStyle = '#FF0000';\n\n        ctx.beginPath();\n        var colStart = 0\n        var colOffset = this.state.screenWidth / this.state.dims[0];\n        colStart = 0;\n        for (var obj in col_pegs) {\n            var lower_coord = 0\n            for (var spl in col_pegs[obj]) {\n                lower_coord = col_pegs[obj][spl]\n                ctx.moveTo(colStart, lower_coord);\n                ctx.lineTo(colStart, col_pegs[obj][spl - 1]);\n                ctx.stroke();\n                if (obj != 0) {\n                    ctx.moveTo(colStart, lower_coord);\n                    ctx.lineTo(colStart - colOffset, col_pegs[obj - 1][spl]);\n                    ctx.stroke();\n                    if (obj % 2 == 0) {\n                        ctx.moveTo(colStart, lower_coord);\n                        ctx.lineTo(colStart - colOffset, col_pegs[obj - 1][spl - 1]);\n                        ctx.stroke();\n                    }\n                    else {\n                        ctx.moveTo(colStart, col_pegs[obj][spl - 1]);\n                        ctx.lineTo(colStart - colOffset, col_pegs[obj - 1][spl]);\n                        ctx.stroke();\n                    }\n                }\n            }\n            colStart += colOffset;\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({\n            col_pegs: await this.generateGrid(),\n            screenWidth: window.screen.availWidth,\n            screenHeight: window.screen.availHeight > window.screen.availWidth ? window.screen.availHeight / 2 : window.screen.availHeight\n        })\n        await this.renderTraingles();\n    }\n\n    render() {\n        return (\n            <div\n                onClick={\n                    async () => {\n                        await this.renderTraingles();\n                        this.transformTriangle();\n                    }}>\n                <canvas id='triangulationCanvas'\n                    style={{\n                        position: 'fixed',\n                        marginTop: window.screen.availHeight > window.screen.availWidth ? '20%' : '0%',\n                        textAlign: 'none',\n                        backgroundColor: '#282C34'\n                    }}\n                    width={window.screen.availWidth}\n                    height={window.screen.availHeight}\n                ></canvas>\n            </div>\n        )\n    }\n}`\n\nexport default class Triangulation extends React.Component {\n    state = {\n        dims: window.screen.width > 600 ? [20, 7] : [10, 10],\n        col_pegs: [],\n        col_pregs_dest: [],\n        interm_pegs: [],\n        screenWidth: window.screen.availWidth,\n        screenHeight: window.screen.availHeight > window.screen.availWidth ? window.screen.availHeight / 2 : window.screen.availHeight,\n        easter_count:0\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n    }\n\n    async transformTriangle() {\n        const steps = [0.02, 0.06, 0.14, 0.30, 0.70, 0.86, 0.94, 0.98, 1.0]\n        const col_pegs = this.state.col_pegs\n        const new_col_pegs = await this.generateGrid()\n\n        this.setState({\n            col_pregs_dest: new_col_pegs\n        });\n        for (var p in steps) {\n            var intermediate_pegs = [];\n            for (var obj in col_pegs) {\n                var intermediate_col = [];\n                for (var spl in col_pegs[obj]) {\n                    var delta = new_col_pegs[obj][spl] - col_pegs[obj][spl]\n                    intermediate_col.push(col_pegs[obj][spl] + (delta * steps[p]))\n                }\n                intermediate_pegs.push(intermediate_col)\n            }\n            this.setState({\n                col_pegs: intermediate_pegs\n            })\n            await this.renderTraingles()\n            await sleep(1)\n        }\n        this.setState({\n            col_pegs: new_col_pegs\n        })\n    }\n\n    async generateGrid() {\n        const splits = [30, 50, 40, 15, 20]\n        var col_pegs = [];\n        for (var j = 0; j <= this.state.dims[0]; j++) {\n            var col_height = this.state.screenHeight;\n            var temp_col = []\n            var prev = 0\n            for (var i = 0; i < this.state.dims[1]; i++) {\n                var rand_split = this.getRandomInt(5, 21);\n                temp_col.push(prev + col_height * (rand_split / 100))\n                prev += col_height * (rand_split / 100)\n                col_height = col_height * (1 - (rand_split / 100))\n            }\n            col_pegs.push(temp_col)\n        }\n        return col_pegs\n    }\n\n    async renderTraingles() {\n        var col_pegs = this.state.col_pegs;\n        var c = document.getElementById(\"triangulationCanvas\");\n        var ctx = c.getContext(\"2d\");\n        ctx.clearRect(0, 0, c.width, c.height);\n        ctx.strokeStyle = \"#559e89\";\n        ctx.fillStyle = \"#FF0000\";\n\n        ctx.beginPath();\n        var colStart = 0\n        var colOffset = this.state.screenWidth / this.state.dims[0];\n        colStart = 0;\n        for (var obj in col_pegs) {\n            var lower_coord = 0\n            for (var spl in col_pegs[obj]) {\n                lower_coord = col_pegs[obj][spl]\n                ctx.moveTo(colStart, lower_coord);\n                ctx.lineTo(colStart, col_pegs[obj][spl - 1]);\n                ctx.stroke();\n                if (obj != 0) {\n                    ctx.moveTo(colStart, lower_coord);\n                    ctx.lineTo(colStart - colOffset, col_pegs[obj - 1][spl]);\n                    ctx.stroke();\n                    if (obj % 2 == 0) {\n                        ctx.moveTo(colStart, lower_coord);\n                        ctx.lineTo(colStart - colOffset, col_pegs[obj - 1][spl - 1]);\n                        ctx.stroke();\n                    }\n                    else {\n                        ctx.moveTo(colStart, col_pegs[obj][spl - 1]);\n                        ctx.lineTo(colStart - colOffset, col_pegs[obj - 1][spl]);\n                        ctx.stroke();\n                    }\n                }\n            }\n            colStart += colOffset;\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({\n            col_pegs: await this.generateGrid(),\n            screenWidth: window.screen.availWidth,\n            screenHeight: window.screen.availHeight > window.screen.availWidth ? window.screen.availHeight / 2 : window.screen.availHeight\n        })\n        await this.renderTraingles();\n    }\n\n    render() {\n        return (\n            <div>\n\n                    {\n                        this.state.easter_count==8?(<center>\n                            <Button icon='close' type=\"primary\"\n                            onClick={()=>{\n                                \n                            this.setState({\n                                easter_count:0\n                            })}}>Close</Button><br></br>\n                            <AceEditor\n                                placeholder=\"Placeholder Text\"\n                                mode=\"javascript\"\n                                theme=\"monokai\"\n                                name=\"triangulation_source\"\n                                style={{maxWidth:'100%'}}\n                                fontSize={14}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                value={source_code_str}\n                                readOnly={true}\n                                setOptions={{\n                                    enableBasicAutocompletion: false,\n                                    enableLiveAutocompletion: false,\n                                    enableSnippets: false,\n                                    showLineNumbers: true,\n                                    tabSize: 2,\n                                }} />\n                        </center>):(<div/>)\n                    }\n                    <canvas id=\"triangulationCanvas\"\n                    onClick={\n                        async () => {\n                            await this.renderTraingles();\n                            this.transformTriangle();\n                            const current_easter_count = this.state.easter_count\n                            this.setState({\n                                easter_count:current_easter_count+1\n                            })\n                            if(this.state.easter_count == 8){\n                                message.destroy()\n                                message.success(\"Awesome! You found the source code!\")\n                            }\n                            if(this.state.easter_count == 3){\n                                message.destroy()\n                                message.info(\"Hmmm something is happening!\")\n                            }\n                        }}\n                    style={{\n                        position: 'fixed',\n                        marginTop: window.screen.availHeight > window.screen.availWidth ? '20%' : '0%',\n                        textAlign: 'none',\n                        backgroundColor: '#282C34'\n                    }}\n                    width={window.screen.availWidth}\n                    height={window.screen.availHeight}\n                ></canvas>\n                \n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport {\n    Tabs, Icon, Carousel, Card, Row, Col, Collapse,\n    Button, Modal, TreeSelect, Divider, Typography,\n    Avatar\n} from 'antd';\nconst { Meta } = Card;\n\nexport default class AboutMe extends React.Component {\n    render() {\n\n        return (\n            <div class='AboutMe' id=\"AboutMe\">\n                <center>\n                    <Typography.Title\n                        style={{\n                            color: 'white',\n                            paddingTop: '7%'\n                        }}\n                        >SHIV.\n                    </Typography.Title>\n\n                    <Typography.Paragraph\n                        style={{\n                            color: 'white' ,\n                            maxWidth:'350px',\n                            textAlign:'justify'\n                        }}\n                    >I'm good at building high performance AI systems. \n                    My research interests revolve around high-performance computing,\n                    computer vision and graphics. \n                    In my free time I read, build software, make comics or learn math. \n                    Check out my Github and LinkedIn to know more about my work.</Typography.Paragraph>\n                    <br></br>\n                    <br></br>\n                    <a\n                                        href=\"https://www.glance.com/\"\n                        target=\"_blank\"\n                        >\n                    <img \n                    style={{\n                        maxWidth:'150px'\n                    }}\n                    src='https://glancecdn.azureedge.net/assets/ui/images/desk_uploads/header_logo.png'></img>\n                    </a>\n                    <br></br>\n                    <br></br>\n                    <Typography.Paragraph\n                        style={{\n                            color: 'white' ,\n                            maxWidth:'350px',\n                            textAlign:'justify'\n                        }}>I work as a Machine-Learning-Engineer 2 @ Glance.\n                        I'm solving computer-vision and personalization \n                        for 100 Million+ users, at scale. My work is a mixed bag of\n                        ML/DS, Softare Engineering and Infra.\n                    \n                    </Typography.Paragraph>\n                    <br></br>\n                    <br></br>\n\n                    <a\n                    href=\"https://www.linkedin.com/in/shivjeet-bhosale-97142a133\"\n                    target=\"_blank\"\n                    >\n                    <Icon type='linkedin' style={{\n                        color:'white',\n                        fontSize:'22px'\n                    }}></Icon>\n                    </a>\n\n\n                </center>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {\n    Card, Spin,\n    Tag, Col, Row, Typography,\n    Switch, Icon\n} from 'antd';\nimport { render } from \"react-dom\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-kuroir\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\n// import './App.css';\n\nconst ReactMarkdown = require('react-markdown')\nconst { Meta } = Card;\n\nclass JupViewer extends React.Component {\n    state = {\n        //file_path\n        fpath: \"\",\n        fbase_path: \"\",\n        // Editor Theme\n        ed_theme: 'darkTheme',\n        text_ed_theme: 'monokai',\n        //themes:\n        background_theme: \"black\",\n        background_text_theme: 'white',\n        // background_input_theme: '#2F3129',\n        background_input_theme: '#272822',\n        background_output_theme: '#2F3129',\n        loading: true,\n        notebook_json: null,\n        placeholder_component: \"Loading....\",\n\n        // Gutter\n        gutterVisible: false\n    }\n\n    validURL(str) {\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n        return !!pattern.test(str);\n    }\n\n    async componentDidMount() {\n        if (!!this.props.file) {\n            var fbase = this.props.file.split('/');\n            fbase.pop();\n            this.setState({\n                fpath: this.props.file,\n                fbase_path: fbase.join('/') + '/'\n            })\n            await fetch(this.props.file)\n                .then((r) => r.text())\n                .then(async (text) => {\n                    try {\n                        var notebook_json = JSON.parse(text)\n                        this.setState({\n                            notebook_json: notebook_json,\n                            loading: false,\n                            placeholder_component: 'Notebook loaded'\n                        })\n                        // console.log(this.state.notebook_json)\n                    } catch (error) {\n                        alert('OOps! Unable to load json')\n                        this.setState({\n                            notebook_json: { \"message\": \"Unable to parse .ipynb file\" },\n                            loading: false,\n                            placeholder_component: 'Oops! We have problem opening the notebook'\n                        })\n                    }\n                })\n        }\n    }\n\n    praseSource(source) {\n        var cell_content = ``\n        for (var code in source) {\n            cell_content += source[code]\n        }\n        return cell_content\n    }\n\n    parseMD(source) {\n        var cell_content = ``\n        for (var code in source) {\n            var rgx = new RegExp(/src=\"(.*?)\"/)\n            var new_source = source[code]\n            var old_source = source[code].match(rgx)\n            if (!!old_source && !this.validURL(old_source[1])) {\n                new_source = source[code].replace(/src=\"(.*?)\"/, 'src=\"' + this.state.fbase_path + old_source[1] + '\"')\n                // console.log(new_source)\n            } else {\n                var rgx2 = new RegExp(/\\!\\[(.*?)\\]\\((.*?)[\\s|\\)]/)\n                var s2 = source[code].match(rgx2)\n                if (!!s2 && !this.validURL(s2[2])) {\n                    // console.log(s2[2])\n                    // console.log(this.validURL(s2[2]))\n                    // console.log(new_source.replace(s2[2], this.state.fbase_path + s2[2]))\n                    new_source = new_source.replace(s2[2], this.state.fbase_path + s2[2])\n                }\n            }\n            // \n            cell_content += new_source\n        }\n        return cell_content\n    }\n\n    praseOutputs(outputs) {\n        if (outputs.length == 0) {\n            return \"\"\n        }\n        // Handle \"data\" type cells\n        var text_plain = ``\n        var stdout = ``\n        var errors = ``\n        var img_data = `data:image/png;base64,`\n\n        //booleans\n        var stdout_found = false\n        var text_found = false\n        var error_found = false\n        var img_found = false\n\n        //maxlines for each output type\n        var lines_stdout = 3\n        var lines_text_plain = 3\n        var lines_error_trace = 3\n        for (var outs in outputs) {\n            if (\"data\" in outputs[outs]) {\n\n                if (\"text/plain\" in outputs[outs][\"data\"]) {\n                    for (var text in outputs[outs]['data']['text/plain']) {\n                        text_plain += outputs[outs]['data']['text/plain'][text]\n                    }\n                    text_found = true\n                    lines_text_plain = outputs[outs][\"data\"][\"text/plain\"].length\n                }\n                if (\"image/png\" in outputs[outs][\"data\"]) {\n                    img_data += outputs[outs][\"data\"][\"image/png\"]\n                    img_found = true\n                }\n            }\n            if (\"name\" in outputs[outs]) {\n                for (var text in outputs[outs][\"text\"]) {\n                    stdout += outputs[outs][\"text\"][text]\n                }\n                stdout_found = true\n                lines_stdout = outputs[outs][\"text\"].length\n            }\n            // Check for errors\n            if (\"ename\" in outputs[outs]) {\n                errors += outputs[outs]['ename'] + \"\\n\" + outputs[outs][\"evalue\"] + \"\\n\"\n                // for (var trace in outputs[outs][\"traceback\"]) {\n                //     errors += outputs[outs][\"traceback\"][trace]\n                // }\n                error_found = true\n                lines_error_trace = outputs[outs][\"traceback\"].length\n            }\n        }\n\n        var return_template = (\n            <div>\n                <div style={{\n                    padding: '5px 3px',\n                    display: stdout_found ? '' : 'none'\n                }}>\n                    <Tag color=\"#2db7f5\"\n                    >stdout</Tag><br></br>\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"stdout\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_stdout + 1}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={stdout}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n                <div style={{ padding: '5px 3px', display: text_found ? '' : 'none' }}>\n                    <Tag color=\"#87d068\"\n                    >data:text/plain</Tag><br></br>\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"text\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_text_plain}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={text_plain}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n                <div style={{ display: img_found ? '' : 'none' }}>\n                    <Tag color=\"#87d068\"\n                    >data:image/png</Tag><br></br>\n                    <img\n                        src={img_data}\n                        style={{\n                            display: img_found ? '' : 'none',\n                            width: '100%',\n                            backgroundColor: 'white'\n                        }} />\n                </div>\n                <div style={{ padding: '5px 3px', display: error_found ? '' : 'none' }}>\n                    <Tag color=\"#f50\"\n                    >error</Tag><br></br>\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"error\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_error_trace}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={errors}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n            </div>\n        )\n\n\n        return return_template\n    }\n\n\n    themeChanger(ev) {\n        if (ev) {\n            this.setState({\n                // Editor Theme\n                ed_theme: 'darkTheme',\n                text_ed_theme: 'monokai',\n                //themes:\n                background_theme: \"black\",\n                background_text_theme: 'white',\n                // background_input_theme: '#2F3129',\n                background_input_theme: '#272822',\n                background_output_theme: '#2F3129',\n            })\n        }\n        else {\n            this.setState({\n                // Editor Theme\n                ed_theme: 'lightTheme',\n                text_ed_theme: 'kuroir',\n                //themes:\n                background_theme: \"white\",\n                background_text_theme: 'black',\n                // background_input_theme: '#2F3129',\n                background_input_theme: '#E8E9E8',\n                background_output_theme: '#F1F1F2',\n            })\n        }\n        // console.log(`switch to ${ev}`);\n    }\n\n    gutterChanger(ev) {\n        if (ev) {\n            this.setState({\n                gutterVisible: true\n            })\n        }\n        else {\n            this.setState({\n                gutterVisible: false\n            })\n        }\n    }\n\n    render() {\n        // console.log(this.props.file)\n        return (\n            <div>\n                <Spin spinning={this.state.loading} >\n                    <center>\n                        <div\n                        style={{\n                            marginBottom:'5px'\n                        }}>\n                        <a \n                        onClick={() => {\n                            const url = new URL(window.location);\n                            url.searchParams.set('view', 'blog');\n                            url.searchParams.delete('id');\n                            window.history.pushState({}, '', url);\n                            window.location.reload();\n                        }}>[x] close</a>\n                        </div>\n                        {/* This is where the blog metadata and the cover will go */}\n                        <div class={this.state.ed_theme}>\n                            <Card\n                                bodyStyle={{\n                                    padding: '30px 10px',\n                                    backgroundColor: this.state.background_output_theme,\n                                }}\n                                style={{\n                                    width: '100%',\n                                    maxWidth: '800px',\n                                    border: 'none'\n                                }}\n                            >\n                                <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={22}>\n                                        <Typography.Title strong style={{\n                                            color: this.state.background_text_theme,\n                                            // fontSize: '50px',\n                                            wordWrap: 'break-word',\n                                            width: '100%',\n                                        }}>{this.props.title}</Typography.Title>\n                                        <Typography.Title\n                                            level={4} style={{\n                                                color: this.state.background_text_theme,\n                                                wordWrap: 'break-word',\n                                                width: '100%',\n                                                display: !!this.props.subtitle ? '' : 'none'\n                                            }}>{this.props.subtitle}</Typography.Title>\n                                    </Col>\n                                    <Col span={1}></Col>\n                                </Row>\n\n                                <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={22}>\n                                        <img\n                                            alt=\"No Cover Image Found\"\n                                            style={{\n                                                display: !!this.props.coverImg ? '' : 'none',\n                                                width: '100%'\n                                            }}\n                                            src={!!this.props.coverImg ? this.props.coverImg : \"http://eskipaper.com/images/simple-silver-wallpaper-1.jpg\"} />\n                                    </Col>\n                                    <Col span={1}>\n\n                                    </Col>\n                                </Row>\n\n                                <br></br>\n                                <br></br>\n                                <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={20}>\n                                        <Tag color=\"blue\" style={{ float: 'left' }}>{this.state.loading ? \"Unknown\" : this.state.notebook_json['metadata']['kernelspec']['display_name']}</Tag>\n                                        <Switch\n                                            style={{\n                                                margin: '0px 5px'\n                                            }}\n                                            defaultChecked checkedChildren=\"dark theme\" unCheckedChildren=\"light theme\"\n                                            onChange={this.themeChanger.bind(this)}\n                                        />\n                                        <Switch\n                                            style={{\n                                                margin: '0px 5px'\n                                            }}\n                                            checkedChildren=\"gutter visilbe\" unCheckedChildren=\"gutter hidden\"\n                                            onChange={this.gutterChanger.bind(this)} />\n                                    </Col>\n                                    <Col span={1}></Col>\n                                </Row>\n                            </Card>\n                        </div>\n                        {\n                            this.state.loading ? <div></div> : (this.state.notebook_json['cells'].map(item => (\n                                <Card\n                                    bodyStyle={{\n                                        padding: '0px 10px',\n                                        backgroundColor: this.state.background_output_theme\n                                    }}\n                                    style={{\n                                        width: '100%',\n                                        maxWidth: '800px',\n                                        border: 'none'\n                                    }}\n                                >\n\n                                    <Row\n                                        style={{\n                                            backgroundColor: this.state.background_output_theme\n                                        }}\n                                    >\n                                        <Col span={this.state.gutterVisible ? 3 : 1}>\n                                            <div\n                                                style={{\n                                                    display: this.state.gutterVisible ? '' : 'none'\n                                                }}\n                                            >\n                                                <Typography.Text\n                                                    style={{\n                                                        color: this.state.background_text_theme,\n                                                        float: 'left',\n                                                        padding: '5px',\n                                                        color: '#56ACBC',\n                                                        display: item['cell_type'] == \"code\" ? '' : 'none',\n                                                    }}>\n                                                    I [ {item['execution_count']} ]:\n                                            </Typography.Text>\n\n                                            </div>\n                                        </Col>\n\n                                        <Col span={this.state.gutterVisible ? 20 : 22}\n                                            style={{\n                                                textAlign: 'left'\n                                            }}\n                                        >\n\n                                            {item['cell_type'] == \"code\" ? (\n                                                <div\n                                                    style={{\n                                                        padding: '5px 0px',\n                                                        borderStyle: 'solid',\n                                                        borderWidth: '1px',\n                                                        backgroundColor: this.state.background_input_theme\n                                                    }}>\n                                                    <AceEditor\n                                                        readOnly\n                                                        placeholder=\"---\"\n                                                        mode=\"python\"\n                                                        theme={this.state.text_ed_theme}\n                                                        name=\"code\"\n                                                        style={{\n                                                            maxWidth: '700px',\n                                                            padding: '10px',\n                                                            margin: '10px 0px'\n                                                        }}\n                                                        width=\"100%\"\n                                                        maxLines={item['source'].length == 0 ? 1 : item['source'].length + 1}\n                                                        onLoad={this.onLoad}\n                                                        onChange={this.onChange}\n                                                        fontSize={14}\n                                                        showGutter={true}\n                                                        highlightActiveLine={true}\n                                                        value={this.praseSource(item['source'])}\n                                                        setOptions={{\n                                                            enableBasicAutocompletion: false,\n                                                            enableLiveAutocompletion: false,\n                                                            enableSnippets: false,\n                                                            showLineNumbers: true,\n                                                            tabSize: 2,\n                                                        }} />\n                                                </div>\n                                            ) :\n\n                                                <div class=\"MDImg\">\n                                                    <div\n                                                        class={this.state.ed_theme}\n                                                        style={{\n                                                            margin: '0px 0px',\n                                                            padding: '10px',\n                                                            // border:'solid',\n                                                            // borderWidth:'1px'\n                                                        }}\n                                                    >\n                                                        <ReactMarkdown\n                                                            style={{\n                                                                float: 'left'\n                                                            }}\n                                                            source={this.parseMD(item['source'])}\n                                                            escapeHtml={false}\n                                                        />\n                                                    </div>\n                                                </div>}\n                                        </Col>\n                                        <Col span={1}></Col>\n                                    </Row>\n\n                                    {\n                                        item['cell_type'] == 'markdown' ? <div></div> :\n                                            (\n                                                <Row\n                                                    style={{\n                                                        display: !!item['outputs'].length == 0 ? 'none' : 'visible',\n                                                        backgroundColor: this.state.background_output_theme\n                                                    }}>\n\n                                                    <Col span={this.state.gutterVisible ? 3 : 1}>\n                                                        <Typography.Text\n                                                            style={{\n                                                                display: this.state.gutterVisible ? '' : 'none',\n                                                                color: this.state.background_text_theme,\n                                                                float: 'left',\n                                                                padding: '5px',\n                                                                color: '#E5496A'\n                                                            }}>\n                                                            O [ {item['execution_count']} ]:\n                                                        </Typography.Text>\n                                                    </Col>\n                                                    <Col span={this.state.gutterVisible ? 20 : 22}\n                                                        style={{\n                                                            textAlign: 'left',\n                                                            color: 'white'\n                                                        }}>\n                                                        {this.praseOutputs(item['outputs'])}\n                                                    </Col>\n                                                    <Col span={1}></Col>\n                                                </Row>\n                                            )\n                                    }\n                                </Card>\n                            )))\n                        }\n                    </center>\n                </Spin>\n            </div>\n        )\n    }\n}\n\n\nexport default JupViewer;\n","import React from 'react';\nimport {\n    Drawer, Button, Radio, Icon,\n    Result, Card,\n    Typography, Tag, Spin, message\n} from 'antd';\nimport { Link} from 'react-router-dom'\n\nimport JupViewer from './JupViewer'\nconst blogConfig = require('./blogConfig.json')\n// console.log(blogConfig)\nconst { Meta } = Card;\n\nexport class BlogDrawer extends React.Component {\n    state = {\n        visible: false,\n        placement: 'right',\n\n        // states for the Blog modal\n        bmodal_visible: false,\n        bmodal_title: \"Loading...\",\n        bmodal_cover: \"\",\n        bmodal_subtitle: \"\",\n        bmodal_subtext: \"\",\n        bmodal_nb_url: \"\",\n\n        // Notebook view\n        nb_view: (\n            <center>\n                <Spin />\n            </center>\n        )\n\n    };\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false\n        });\n    };\n\n    onChange = e => {\n        this.setState({\n            placement: e.target.value,\n        });\n    };\n\n    openBlogDrawer(item) {\n        // console.log(item)\n        this.setState({\n            bmodal_visible: true,\n            bmodal_title: item['title'],\n            bmodal_cover: item['cover_img_url'],\n            bmodal_subtitle: item['subtitle'],\n            bmodal_subtext: item['subtitle'],\n            bmodal_nb_url: item['nb_url'],\n            nb_view: (\n                <center>\n                    <JupViewer\n                        title={item['title']}\n                        subtitle={item['subtitle']}\n                        coverImg={item['cover_img_url']}\n                        file={item['nb_url']}\n                    />\n                </center>)\n        })\n    }\n\n    onCloseBlog = () => {\n        window.location = window.location.origin\n        // Doesnt reach these\n        this.setState({\n            bmodal_visible: false\n        });\n    };\n\n    parseURLParams(url) {\n        var queryStart = url.indexOf(\"?\") + 1,\n            queryEnd = url.indexOf(\"#\") + 1 || url.length + 1,\n            query = url.slice(queryStart, queryEnd - 1),\n            pairs = query.replace(/\\+/g, \" \").split(\"&\"),\n            parms = {}, i, n, v, nv;\n\n        if (query === url || query === \"\") return;\n\n        for (i = 0; i < pairs.length; i++) {\n            nv = pairs[i].split(\"=\", 2);\n            n = decodeURIComponent(nv[0]);\n            v = decodeURIComponent(nv[1]);\n\n            if (!parms.hasOwnProperty(n)) parms[n] = [];\n            parms[n].push(nv.length === 2 ? v : null);\n        }\n        return parms;\n    }\n\n    componentDidMount(newProps) {\n        const parsedParams = this.parseURLParams(window.location.href);\n        if (!!parsedParams) {\n            if (('id' in parsedParams)) {\n                if (parsedParams['id'] in blogConfig['blog_keys']) {\n                    const blog_content = blogConfig['blog_keys'][parsedParams['id']]\n                    this.setState({\n                        bmodal_visible: true,\n                        nb_view: (\n                            <center>\n                                <JupViewer\n                                    title={blog_content['title']}\n                                    subtitle={blog_content['subtitle']}\n                                    coverImg={blog_content['cover_img_url']}\n                                    file={blog_content['nb_url']}\n                                />\n                            </center>)\n                    })\n                }\n                else {\n                    message.warning('No Blog found on the intended URL')\n                    this.setState({\n                        nb_view: (\n                            <center>\n                                <Result\n                                    icon={<Icon type=\"frown\" theme=\"twoTone\" />}\n                                    title={<div style={{ 'color': 'white' }}>Oops! No Notebook on this URL!</div>}\n                                />\n                            </center>)\n                    })\n                }\n            }\n            else {\n                this.setState({\n                    nb_view: (\n                        <center>\n                            <Result\n                                icon={<Icon type=\"frown\" theme=\"twoTone\" />}\n                                title={<div style={{ 'color': 'white' }}>Oops! No Notebook on this URL!</div>}\n                            />\n                        </center>)\n                })\n            }\n        }\n        else {\n            this.setState({\n                nb_view: (\n                    <center>\n                        <JupViewer\n                            title=\"Jupyter as Blogs!\"\n                            subtitle=\"This React component lets you use a jupyter notebook as a blog\"\n                            coverImg=\"https://pbs.twimg.com/media/DnT_X9qXgAYyTOz.jpg\"\n                            file=\"https://raw.githubusercontent.com/fastai/course-v3/master/nbs/dl1/00_notebook_tutorial.ipynb\"\n                        />\n                    </center>)\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ display: 'inline-table' }}>\n                <Icon style={{ color: 'white' }} type=\"book\"></Icon>\n                <a style={{ marginLeft: '10px' }} type=\"primary\" onClick={this.showDrawer}>\n                    blog\n                </a>\n                <Drawer\n                    title=\"My Blogs\"\n                    placement={this.state.placement}\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    // visible={true}\n                    width='350px'\n                    bodyStyle={{\n                        padding: '5px',\n                    }}\n                >\n\n                    {\n                        Object.keys(blogConfig['blog_keys']).map(item => (\n                            <Card\n                                onClick={() => {\n                                    // window.history.pushState('page2', 'Shiv 200', '/#b/?id='+item);\n                                    // this.openBlogDrawer.bind(this)(blogConfig['blog_keys'][item])\n                                    window.open(window.origin + '/#b/?id='+item)\n                                }}\n                                // onClick={()=>{window.location = window.location.origin+\"/n?id=\"+item}}\n                                hoverable\n                                cover={<img alt=\"example\" src={blogConfig['blog_keys'][item]['cover_img_url']} />}\n                                style={{\n                                    backgroundColor: '#efefef',\n                                }}\n                            >\n                                <Meta\n                                    title={blogConfig['blog_keys'][item]['title']} description={blogConfig['blog_keys'][item]['subtitle']} />\n                                <br></br>\n\n                                {\n                                    !!!blogConfig['blog_keys'][item]['tags'] ? <div></div> : (\n                                        blogConfig['blog_keys'][item]['tags'].map(tag => (\n                                            <Tag color=\"cyan\">{tag}</Tag>\n                                        ))\n                                    )\n                                }\n\n                            </Card>\n\n                        ))\n                    }\n                </Drawer>\n\n                <Drawer\n                    title=\"Opened Blog\"\n                    placement={this.state.placement}\n                    closable={true}\n                    onClose={this.onCloseBlog}\n                    visible={this.state.bmodal_visible}\n                    width='100%'\n                    bodyStyle={{\n                        padding: '0px',\n                        backgroundColor: '#515151'\n                    }}\n                >\n                    <center>\n                        {this.state.nb_view}\n                    </center>\n                </Drawer>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport animateScrollTo from 'animated-scroll-to';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\nimport {\n  Tabs, Icon, Carousel, Card, Row, Col, Collapse,\n  Button, Modal, TreeSelect, Divider, Typography, Popover,\n  BackTop, Tooltip\n} from 'antd';\nimport Triangulation from './activities/vaporTriangulation'\nimport AboutMe from './activities/aboutMe'\nimport {BlogDrawer} from './activities/blogDrawer'\n\nfunction Landing() {\n  return (\n    <div className=\"App\">\n      <BackTop />\n\n      <center>\n        <Typography.Title\n          style={{\n            color: 'white',\n            paddingTop: '7%'\n          }}\n        >SHIV.</Typography.Title>\n        <div>\n\n        <BlogDrawer />\n          <Divider type=\"vertical\" />\n          <Icon style={{ color: 'white' }} type=\"github\"></Icon><a style={{ marginLeft: '10px' }} href=\"https://github.com/ShivBhosale\" target=\"_blank\">github</a>\n          <Divider type=\"vertical\" />\n          <Icon style={{ color: 'white' }} type=\"robot\"></Icon><a style={{ marginLeft: '10px' }} href=\"https://twitter.com/artstylebot\" target=\"_blank\">AI bot</a>\n          <br></br>\n          <br></br>\n          <AboutMe />\n        </div>\n      </center>\n      <Triangulation />\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from 'react';\nimport {\n    Drawer, Button, Radio, Icon,\n    Result, Card,\n    Typography, Tag, Spin, message, Pagination, Divider\n} from 'antd';\nimport { List, Avatar, Space } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\n\nconst blogConfig = require('./blogConfig.json')\nconst { Meta } = Card;\n\nexport class BlogList extends React.Component {\n    state = {\n        visible: false,\n        placement: 'right',\n\n        // states for the Blog modal\n        bmodal_visible: false,\n        bmodal_title: \"Loading...\",\n        bmodal_cover: \"\",\n        bmodal_subtitle: \"\",\n        bmodal_subtext: \"\",\n        bmodal_nb_url: \"\",\n\n        // Notebook view\n        nb_view: (\n            <center>\n                <Spin />\n            </center>\n        )\n\n    };\n\n    render() {\n        return (\n            <div style={{ display: 'inline-table', width:'70vw' }}>\n                <List\n                        itemLayout=\"vertical\"\n                        size=\"small\"\n                        >               \n                    {\n                        Object.keys(blogConfig['blog_keys']).map(item => (\n                            <List.Item\n                            \n                            style={{\n                                color:'white'\n                            }}\n                            >\n                                <List.Item.Meta\n                                title={\n                                <div>\n                                <Avatar src={blogConfig['blog_keys'][item]['cover_img_url']} />\n                                <Typography.Text style={{\n                                    color:'white',\n                                    paddingLeft:'20px',\n                                    paddingRight:'20px'\n                                }} >{blogConfig['blog_keys'][item]['title']}</Typography.Text> \n                                <Button ghost shape='circle' icon='eye'\n                                onClick={() => {\n                                    // window.history.pushState('page2', 'Shiv 200', '/#b/?id='+item);\n                                    // this.openBlogDrawer.bind(this)(blogConfig['blog_keys'][item])\n                                    window.open(window.origin + '/?view=blog&id='+item)\n                                }}/>\n                                </div>\n                                }\n                                description={\n                                    !!!blogConfig['blog_keys'][item]['tags'] ? <div></div> : (\n                                        blogConfig['blog_keys'][item]['tags'].map(tag => (\n                                            <div style={{display:'inline', color:'cyan', paddingRight:'10px'}}>#{tag}</div>\n                                        ))\n                                    )\n                                }\n                                />\n                            </List.Item>\n                            \n\n                        ))\n                    }\n                    </List>         \n\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport {\n    Drawer, Button, Radio, Icon,\n    Result, Card,\n    Typography, Tag, Spin, Divider\n} from 'antd';\nimport JupViewer from './JupViewer'\nimport { BlogDrawer } from './blogDrawer'\nimport {BlogList} from './blogList'\nconst blogConfig = require('./blogConfig.json')\n// console.log(blogConfig)\nconst { Meta } = Card;\n\n\nexport class BlogViewer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            placement: 'right',\n\n            // states for the Blog modal\n            bmodal_visible: false,\n            bmodal_title: \"Loading...\",\n            bmodal_cover: \"\",\n            bmodal_subtitle: \"\",\n            bmodal_subtext: \"\",\n            bmodal_nb_url: \"\",\n\n            // Notebook view\n            nb_view: (\n                <center>\n                    <Spin />\n                </center>\n            )\n        };\n        this.parseURLParams = this.parseURLParams.bind(this)\n    }\n\n\n    onCloseBlog = () => {\n        this.setState({\n            bmodal_visible: false\n        });\n    };\n\n\n    componentDidMount(newProps) {\n        const parsedParams = this.parseURLParams(window.location.href);\n        console.log(parsedParams)\n        if (!!parsedParams) {\n            if (('id' in parsedParams)) {\n                if (parsedParams['id'] in blogConfig['blog_keys']) {\n                    const blog_content = blogConfig['blog_keys'][parsedParams['id']]\n                    this.setState({\n                        nb_view: (\n                            <center>\n                                <JupViewer\n                                    title={blog_content['title']}\n                                    subtitle={blog_content['subtitle']}\n                                    coverImg={blog_content['cover_img_url']}\n                                    file={blog_content['nb_url']}\n                                />\n                            </center>)\n                    })\n                }\n                else {\n                    this.setState({\n                        nb_view: (\n                            <center>\n                                <Result\n                                    icon={<Icon type=\"frown\" theme=\"twoTone\" />}\n                                    title={<div style={{ 'color': 'white' }}>Oops! No Notebook on this URL!</div>}\n                                />\n                            </center>)\n                    })\n                }\n            }\n            else {\n                this.setState({\n                    nb_view: (\n                        <center>\n                            <BlogList/>\n                        </center>)\n                })\n            }\n        }\n        else {\n            this.setState({\n                nb_view: (\n                    <center>\n                        <JupViewer\n                            title=\"Jupyter as Blogs!\"\n                            subtitle=\"This React component lets you use a jupyter notebook as a blog\"\n                            coverImg=\"https://pbs.twimg.com/media/DnT_X9qXgAYyTOz.jpg\"\n                            file=\"https://raw.githubusercontent.com/fastai/course-v3/master/nbs/dl1/00_notebook_tutorial.ipynb\"\n                        />\n                    </center>)\n            })\n        }\n    }\n\n\n    parseURLParams(url) {\n        var queryStart = url.indexOf(\"?\") + 1,\n            queryEnd = url.length + 1,\n            query = url.slice(queryStart, queryEnd - 1),\n            pairs = query.replace(/\\+/g, \" \").split(\"&\"),\n            parms = {}, i, n, v, nv;\n\n        if (query === url || query === \"\" || query + \"#/b\" === url) return;\n\n        for (i = 0; i < pairs.length; i++) {\n            nv = pairs[i].split(\"=\", 2);\n            n = decodeURIComponent(nv[0]);\n            v = decodeURIComponent(nv[1]);\n\n            if (!parms.hasOwnProperty(n)) parms[n] = [];\n            parms[n].push(nv.length === 2 ? v : null);\n        }\n        return parms;\n    }\n\n    render() {\n        return (\n            <div>\n                <center>\n                    {this.state.nb_view}\n                </center>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Layout, Menu, Icon, Divider,\n        Row, Col } from 'antd';\nimport {\n    MobileView,\n    BrowserView,\n    } from \"react-device-detect\";\n\nimport {BlogViewer} from './activities/blogViewer'\nimport AboutMe from './activities/aboutMe'\nconst { Header, Content, Footer} = Layout;\n\nclass MainPage extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            name:' SHIV NEWWWW',\n            contentLayoutStyle: {\n                \"min-height\": \"90vh\",\n                \"padding\": \"15px 0px\",\n                \"background\": \"#010815\"\n            },\n            contentStyle: {\n                padding: '0 0',\n                backgroundColor:'#010815'\n            },\n            footerStyle: {\n                textAlign: 'center',\n                backgroundColor:'#010815',\n                color:'white'\n            },\n            activeSection:'aboutme',\n            githubBarStyle:{\n                color:'white'\n            },\n            aboutMeStyle:{\n                color:'white'\n            },\n            blogBarStyle:{\n                color:'white'\n            }\n\n            \n        }\n\n        this.isActiveAboutMe = this.isActiveAboutMe.bind(this)\n        this.isActiveBlog = this.isActiveBlog.bind(this)\n\n    }\n\n    isActiveAboutMe(){\n        this.setState({\n            githubBarStyle:{\n                color:'white'\n            },\n            aboutMeStyle:{\n                color:'cyan'\n            },\n            blogBarStyle:{\n                color:'white'\n            },\n            activeSection:'aboutme'\n        })\n        const url = new URL(window.location);\n        url.searchParams.set('view', 'aboutme');\n        url.searchParams.delete('id');\n        window.history.pushState({}, '', url);\n    }\n\n\n    isActiveBlog(){\n        this.setState({\n            githubBarStyle:{\n                color:'white'\n            },\n            aboutMeStyle:{\n                color:'white'\n            },\n            blogBarStyle:{\n                color:'cyan'\n            },\n            activeSection:'blog'\n        })\n        const url = new URL(window.location);\n        url.searchParams.set('view', 'blog');\n        window.history.pushState({}, '', url);\n\n    }\n\n    evaluateParams = (url) => {\n        var queryStart = url.indexOf(\"?\") + 1,\n            queryEnd = url.length + 1,\n            query = url.slice(queryStart, queryEnd - 1),\n            pairs = query.replace(/\\+/g, \" \").split(\"&\"),\n            parms = {}, i, n, v, nv;\n\n        if (query === url || query === \"\" || query + \"#/b\" === url) return;\n\n        for (i = 0; i < pairs.length; i++) {\n            nv = pairs[i].split(\"=\", 2);\n            n = decodeURIComponent(nv[0]);\n            v = decodeURIComponent(nv[1]);\n\n            if (!parms.hasOwnProperty(n)) parms[n] = [];\n            parms[n].push(nv.length === 2 ? v : null);\n        }\n        return parms;\n    }\n\n    componentDidMount(){\n        var qparams = this.props.location.search;\n        var params = this.evaluateParams(qparams);\n        if(params){\n            if('view' in params){\n                if(params['view'][0] == 'about'){\n                    this.isActiveAboutMe()\n                }\n                else if(params['view'][0] == 'blog'){\n                    // if\n                    this.isActiveBlog()\n                }\n            }   \n        }\n        else{\n            console.log('omgggg')\n            this.isActiveAboutMe()\n        }\n\n        console.log(params);\n    }\n\n    render(){\n\n        const activeView = this.state.activeSection;\n        var dislayComponent = null;\n        if (activeView == \"blog\"){\n            dislayComponent = <BlogViewer/>;\n        }\n        else{\n            dislayComponent = <AboutMe/>;\n        }\n\n        return(\n            <div className=\"App\">\n                <Layout className=\"layout\"\n                    \n                >\n                    <Header\n                    style={{\n                        alignContent:'center'\n                    }}>\n                        <center>\n                            <Row>\n                                <Col span={3}></Col>\n                                <Col span={6}\n                                >\n                                    <MobileView>\n                                        <a href=\"https://github.com/ShivBhosale\" target=\"_blank\">\n                                        <Icon style={this.state.githubBarStyle} \n                                        \n                                        type=\"github\"></Icon>\n                                    </a>\n                                    </MobileView>\n                                <BrowserView>\n                                    <Icon style={this.state.githubBarStyle} type=\"github\"></Icon>\n                                    <a style={{ marginLeft: '10px' }} href=\"https://github.com/ShivBhosale\" target=\"_blank\">Github</a>\n                                </BrowserView>\n                                </Col>\n                                <Col span={6}\n                                onClick={this.isActiveAboutMe}\n                                >\n                                <MobileView>\n                                        <Icon style={this.state.aboutMeStyle} \n                                        type=\"robot\"></Icon>\n                                </MobileView>\n                                <BrowserView>\n                                    <Icon style={this.state.aboutMeStyle} type=\"robot\"></Icon>\n                                    <a style={{ marginLeft: '10px' }} type=\"primary\">\n                                        About Me\n                                    </a>\n                                    </BrowserView>\n                                </Col>\n                                <Col span={6}\n                                onClick={this.isActiveBlog}\n                                >\n                                    <MobileView>\n                                        <Icon style={this.state.blogBarStyle} \n                                        \n                                        type=\"book\"></Icon>\n                                    </MobileView>\n                                    <BrowserView>\n                                    <Icon style={this.state.blogBarStyle} type=\"book\"></Icon>\n                                    <a style={{ marginLeft: '10px' }}>Blog</a>\n                                    </BrowserView>\n                                </Col>\n                                <Col span={3}></Col>\n                            </Row>\n                        </center>\n                    </Header>\n                    <Content style={this.state.contentStyle}>\n                    <div className=\"site-layout-content\"\n                        style={this.state.contentLayoutStyle}>\n                            {dislayComponent}\n                        </div>\n                    </Content>\n                    <Footer style={this.state.footerStyle}>\n                    Wanna use this notebook viewer? Star it on my <a href=\"https://github.com/ShivBhosale/React-Jupyter-Viewer\" target=\"_blank\">Github! <Icon type=\"github\"/> </a>\n\n                    </Footer>\n                </Layout>\n          </div>\n        );\n    }\n}\n\n\n\n\nexport default MainPage;\n","import React from 'react';\nimport animateScrollTo from 'animated-scroll-to';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch, HashRouter,BrowserRouter, Link} from 'react-router-dom'\nimport {\n  Tabs, Icon, Carousel, Card, Row, Col, Collapse,\n  Button, Modal, TreeSelect, Divider, Typography, Popover,\n  BackTop, Tooltip\n} from 'antd';\nimport Triangulation from './activities/vaporTriangulation'\nimport AboutMe from './activities/aboutMe'\nimport {BlogDrawer} from './activities/blogDrawer'\nimport Landing from './landingPage'\nimport {BlogViewer} from './activities/blogViewer'\nimport MainPage from './main' \n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/\">\n      <Route exact path=\"/\" component={MainPage} />\n      <Route exact path=\"/main\" component={Landing} />\n      <Route path=\"/b\" component={BlogViewer} />\n      {/* <Route component={Landing} /> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"antd/dist/antd.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter>\n    <App/>\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}